# Linguagem Utilizada para Desenvolver a Aplicação
language: python

# Versão que a aplicação suporta.
python:
  - "3.8"

# Instalação de Módulos que são necessários para a Aplicação.
install:
  - pip install -r requirements_test.txt

# Versão do Ubuntu
dist: focal

# Ativando o MySQL
services:
  - mysql

env:
  global:
   - PYTHONWARNINGS="ignore::DeprecationWarning"
   - CLOUD_SQL_DATABASE_NAME="playlist"
   - CLOUD_SQL_USERNAME="playuser"
   - DB_LOCAL_HOST="127.0.0.1"

before_install:
  - openssl aes-256-cbc -K $encrypted_5b6cb3bb221c_key -iv $encrypted_5b6cb3bb221c_iv
    -in gcpkey.json.enc -out ../gcpkey.json -d
  - mysql -e "CREATE USER '$CLOUD_SQL_USERNAME'@'%' IDENTIFIED BY '$CLOUD_SQL_PASSWORD';"
  - mysql -e "GRANT ALL PRIVILEGES ON *.* TO '$CLOUD_SQL_USERNAME'@'%' WITH GRANT OPTION;"
  - echo -e "[client]\nuser=$CLOUD_SQL_USERNAME\npassword=$CLOUD_SQL_PASSWORD" > ~/.my.cnf && chmod 600 ~/.my.cnf
  - mysql -u $CLOUD_SQL_USERNAME < setup/Playlist.sql
    
# Defini o script de Teste que deve rodar toda vez que o código for alterado.
script:
  - python -m unittest -v test

before_deploy:
  - echo $CLOUD_SQL_PASSWORD >> app.yaml
  - echo $CLOUD_SQL_CONNECTION_NAME >> app.yaml
  - cat app.yaml

deploy:
  - provider: gae
    keyfile: "../gcpkey.json"
    project: playlistpy-code
    skip_cleanup: true
    on:
      branch: main

